#! /bin/bash

#=========================================================================
# Copyright (c) 2014 GemTalk Systems, LLC <dhenrich@gemtalksystems.com>.
#
# Create project entry template script.
# 
#  1. Copy this file to the $GS_HOME/projects/<project=name> directory
#  2. Edit the following three shell variables as needed
#  3. Edit the project entry creation script to match the load specs for
#     your project
#  4. Implement your own helpOpts for additional options
#  5. Expand usage() as needed
#  
#=========================================================================

projectName="ZincHTTPComponents"
projectDirectoryName="Zinc"
logFile="projectLoad_${projectName}.log"

usage() {
  cat <<HELP
USAGE: $(basename $0) [-h] <stone-name>

Create project entry node for $projectName in tODE /home for named stone.

OPTIONS
  -h show usage

EXAMPLES
  $(basename $0) -h
  $(basename $0) devkit

HELP
}

set -e # exit on error
if [ "${GS_HOME}x" = "x" ] ; then
  echo "the GS_HOME environment variable needs to be defined"; exit 1
fi
source ${GS_HOME}/bin/shFunctions

getOpts_help #parse standard (-h) options

if [ $# -ne 1 ]; then
  usage; exit 0
fi
stoneName="$1"
$GS_HOME/bin/tode tode $stoneName 1> $GS_HOME/gemstone/stones/$stoneName/logs/$logFile << EOF
cd /home
eval \` | entry projectNode parentNode | entry := TDProjectSpecEntryDefinition new configuration: '${projectName}' version: '2.4.3' repository: 'github://GsDevKit/zinc:gs_master/repository' loads: #('Core' 'Tests'); status: #(#'active'); locked: true; yourself.  projectNode := TDObjectGatewayNode new name: 'project'; contents: entry printString; yourself.  parentNode := self topez ensureChildrenExistIn: '/home/${projectDirectoryName}'.  ^ parentNode addChildLeafNode: projectNode\`
EOF
