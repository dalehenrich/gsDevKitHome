TDScriptLeafNode{#name:'bug',#contents:'[ :topez :objIn :tokens :command | 
  | opts args |
  \"for help: ./bug -h\"
  command
    getOptsMixedLongShort:
      {#(\'help\' $h #\'none\').
      #(\'bang\' nil #\'none\').
      #(\'bing\' nil #\'none\').
      #(\'boom\' nil #\'none\').
      #(\'clean\' nil #\'none\').
      #(\'create\' nil #\'none\')}
    optionsAndArguments: [ :options :operands | 
      opts := options.
      args := operands ].
  opts
    at: \'help\'
    ifAbsent: [ 
      | analysis theColl query |
      analysis := Dictionary new.
      opts
        at: \'clean\'
        ifPresent: [ :ignored | 
          \"clean up indexes here\"
          UserGlobals removeKey: #\'coll\' ifAbsent: [  ].
          IndexManager removeAllIndexes ].
      opts
        at: \'create\'
        ifPresent: [ :ignored | 
          | coll |
          coll := IdentitySet new.
          UserGlobals at: #\'coll\' put: coll.
          coll add: (Association newWithKey: \'aa\' value: 11).
          coll add: (Association newWithKey: \'bb\' value: 22).
          coll add: (Association newWithKey: \'cc\' value: 33).
          coll add: (Association newWithKey: \'dd\' value: 44) ].
      opts
        at: \'boom\'
        ifPresent: [ :ignored | 
          | coll spec1 spec2 res |
          coll := UserGlobals at: #\'coll\' ifAbsent: [ Set new ].
          spec1 := GsIndexSpec new
            equalityIndex: \'each.key\'
            lastElementClass: String.
          spec2 := GsIndexSpec new
            equalityIndex: \'each.key\'
            lastElementClass: String
            options: GsIndexOptions optionalPathTerms.
          spec1 createIndexesOn: coll.
          spec2 createIndexesOn: coll ].
      opts
        at: \'bing\'
        ifPresent: [ :ignored | 
          | coll spec1 spec2 res |
          coll := UserGlobals at: #\'coll\' ifAbsent: [ Set new ].
          spec1 := GsIndexSpec new
            equalityIndex: \'each.key\'
            lastElementClass: String.
          spec2 := GsIndexSpec new
            equalityIndex: \'each.key\'
            lastElementClass: String
            options: GsIndexOptions optionalPathTerms.
          spec1 createIndexesOn: coll.
          spec1 createIndexesOn: coll ].
      opts
        at: \'bang\'
        ifPresent: [ :ignored | 
          | coll spec1 spec2 res |
          coll := UserGlobals at: #\'coll\' ifAbsent: [ Set new ].
          spec1 := GsIndexSpec new
            equalityIndex: \'each.key\'
            lastElementClass: String.
          spec2 := GsIndexSpec new
            equalityIndex: \'each.key\'
            lastElementClass: String
            options: GsIndexOptions optionalPathTerms.
          res := String new.
          res
            add: \'create spec1\';
            lf.
          spec1 createIndexesOn: coll.
          res
            add: coll indexSpec printString;
            lf;
            lf.
          res
            add: \'create spec2\';
            lf.
          spec2 createIndexesOn: coll.
          res
            add: coll indexSpec printString;
            lf;
            lf.
          coll removeAllIndexes.
          res
            add: \'remove indexes and create spec2\';
            lf.
          spec2 createIndexesOn: coll.
          res add: coll indexSpec printString.
          analysis
            at: \'result\' put: res;
            yourself ].
      theColl := UserGlobals at: #\'coll\' ifAbsent: [ Set new ].
      analysis
        at: \'nsc\' put: theColl;
        yourself.
      analysis ]
    ifPresent: [ :ignored | 
      TDManPage
        viewManPage:
          \'NAME
  bug - bug sript utility template
SYNOPSIS
  bug [-h|--help]
  bug [--clean][--create][--boom][--bang][--bing]
DESCRIPTION
  Reproduce bug.
EXAMPLES
  ./bug --help
  ./bug --clean --create --boom; edit
\'
        topez: topez ] ]',#creationTime:DateAndTime['2014-10-28T11:46:42.8226590156555-07:00'],#modificationTime:@2}