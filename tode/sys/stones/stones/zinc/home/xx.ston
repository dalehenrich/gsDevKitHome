TDScriptLeafNode{#name:'xx',#contents:'[ :topez :objIn :tokens :command :commandNode | 
  | opts args |
  \"for help: ./xx -h\"
  command
    getOptsMixedLongShort: {#(\'help\' $h #\'none\')}
    optionsAndArguments: [ :options :operands | 
      opts := options.
      args := operands ].
  opts
    at: \'help\'
    ifAbsent: [ 
      | str1 str2 str3 str4 str5 asciiStream str6 str7 |
      str1 := #[240 163 142 143] decodeFromUTF8.
      asciiStream := WriteStream on: String new.
      ((NeoJSONWriter on: asciiStream) asciiOnly: true) nextPut: str1.
      str2 := asciiStream contents.
      str3 := NeoJSONWriter toString: str1.
      str4 := str3 encodeAsUTF8.
      str5 := str4 decodeFromUTF8.
      str6 := NeoJSONReader fromString: str5.
      str7 := NeoJSONReader fromString: str2.
      {{str1.\t\"Unicode32 string\"
      (str1 asByteArray)}.
      {str2.\t\"NeoJSON encoded using `asciiOnly = true`\"
      (str2 asByteArray)}.
      {str3.\t\"NeoJSON encoded using `asciiOnly = false`\"
      (str3 asByteArray)}.
      {str4.\t\"str3 encoded as UTF8\"
      (str4 asByteArray)}.
      {str5.\t\"str4 decoded from UTF8\"
      (str5 asByteArray)}.
      {str6.\t\"NeoJSON decoding of `str5` (`asciiOnly = false`)\"
      (str6 asByteArray)}.
      {str7.\t\"NeoJSON decoding of `str2` (`asciiOnly = true`)\"
      (str7 asByteArray)}} ]
    ifPresent: [ :ignored | 
      TDManPage
        viewManPage:
          \'NAME
  xx - xx sript utility template
SYNOPSIS
  xx [-h|--help]
DESCRIPTION
EXAMPLES
  ./xx --help
  ./xx -h
\'
        topez: topez ] ]',#creationTime:DateAndTime['2014-12-01T17:56:03.2913589477539-08:00'],#modificationTime:DateAndTime['2015-01-05T12:32:07.2668869495391-08:00']}