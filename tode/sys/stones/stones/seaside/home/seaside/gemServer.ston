TDScriptLeafNode{#name:'gemServer',#contents:'[ :topez :objIn :tokens :command :commandNode | 
  | opts args |
  \"for help: ./gemServer -h\"
  command
    getOptsMixedLongShort:
      {#(\'help\' $h #\'none\').
      #(\'log\' nil #\'required\').
      #(\'logTo\' nil #\'required\').
      #(\'port\' nil #\'required\').
      #(\'register\' nil #\'required\').
      #(\'restart\' nil #\'required\').
      #(\'start\' nil #\'required\').
      #(\'stop\' nil #\'required\').
      #(\'type\' nil #\'required\').
      #(\'unregister\' nil #\'required\')}
    optionsAndArguments: [ :options :operands | 
      opts := options.
      args := operands ].
  opts
    at: \'help\'
    ifAbsent: [ 
      | gemServer result |
      result := #\'noop\'.
      opts
        at: \'unregister\'
        ifPresent: [ :serverName | result := GemServerRegistry removeGemServerNamed: serverName ]
        ifAbsent: [ 
          opts
            at: \'register\'
            ifPresent: [ :serverName | 
              gemServer := (GemServerRegistry gemServerNamed: serverName)
                ifNil: [ 
                  | gemServerClass |
                  opts
                    at: \'type\'
                    ifPresent: [ :adaptor | 
                      adaptor = \'zinc\'
                        ifTrue: [ gemServerClass := ZnSeasideGemServer ]
                        ifFalse: [ 
                          adaptor = \'fastcgi\'
                            ifTrue: [ gemServerClass := FastCGISeasideGemServer ]
                            ifFalse: [ 
                              adaptor = \'swazoo\'
                                ifTrue: [ gemServerClass := SwazooSeasideGemServer ]
                                ifFalse: [ self error: \'unknown  adaptor type: \' , adaptor printString ] ] ] ]
                    ifAbsent: [ gemServerClass := ZnSeasideGemServer ].
                  gemServer := (gemServerClass register: serverName) yourself ].
              opts
                at: \'port\'
                ifPresent: [ :portString | gemServer ports: {(portString asNumber)} ].
              opts
                at: \'log\'
                ifPresent: [ :logString | 
                  logString = \'all\'
                    ifTrue: [ gemServer logFilter: nil ]
                    ifFalse: [ gemServer logFilter: logString asSymbol ].
                  opts
                    at: \'logTo\'
                    ifPresent: [ :logToString | 
                      logToString = \'objectLog\'
                        ifTrue: [ gemServer logToObjectLog ]
                        ifFalse: [ 
                          logToString = \'transcript\'
                            ifTrue: [ gemServer logToTranscript ] ] ] ] ].
          result := gemServer ].
      opts
        at: \'restart\'
        ifPresent: [ :serverName | result := (GemServerRegistry gemServerNamed: serverName) restartGems ].
      opts
        at: \'start\'
        ifPresent: [ :serverName | result := (GemServerRegistry gemServerNamed: serverName) startGems ].
      opts at: \'client\' ifPresent: [  ].
      opts
        at: \'stop\'
        ifPresent: [ :serverName | result := (GemServerRegistry gemServerNamed: serverName) stopGems ].
      result ]
    ifPresent: [ :ignored | 
      TDManPage
        viewManPage:
          \'NAME
  gemServer - gemServer sript utility template
SYNOPSIS
  gemServer [-h|--help]
  gemserver --register=<gemServer-name> --type=[zinc|fastcgi|swazoo] \\
            [--port=<server-port>] \\
            [--logTo=transcript|objectLog] [--log=all|debug|error|info] \\
  gemServer --unregister=<gemServer-name>
DESCRIPTION
EXAMPLES
  ./gemServer --help
  ./gemServer -h
  ./gemServer --register=seaside --type=zinc --port=1750 --log=all \\
              --logTo=transcript
  ./gemServer --register=seaside --type=zinc --port=1750 --log=error \\
              --logTo=transcript
  ./gemServer --register=seaside --type=zinc --port=1750 --log=error \\
               --logTo=objectLog
  ./gemServer --unregister=seaside

  ./gemServer --start=seaside
  ./gemServer --stop=seaside
  ./gemServer --restart=seaside

\'
        topez: topez ] ]',#creationTime:DateAndTime['2014-12-17T12:11:42.2836089134216-08:00'],#modificationTime:DateAndTime['2014-12-19T19:30:33.2171900272369-08:00']}