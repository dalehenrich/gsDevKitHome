TDScriptLeafNode{#name:'lesson_04',#contents:'[ :topez :objIn :tokens :command :commandNode | 
  | opts args |
  \"for help: ./lesson_04 -h\"
  command
    getOptsMixedLongShort:
      {#(\'help\' $h #\'none\').
      #(\'edit\' $e #\'none\').
      #(\'profile\' nil #\'required\').
      #(\'queries\' nil #\'none\').
      #(\'run\' nil #\'required\').
      #(\'time\' nil #\'required\')}
    optionsAndArguments: [ :options :operands | 
      opts := options.
      args := operands ].
  opts
    at: \'help\'
    ifAbsent: [ 
      | result |
      opts
        at: \'edit\'
        ifPresent: [ :ignored | commandNode edit: topez ]
        ifAbsent: [ 
          opts
            at: \'queries\'
            ifPresent: [ :ignored | topez evaluateCommandString: \'./lesson_03 --queries\' ]
            ifAbsent: [ 
              | queries profile |
              queries := topez
                evaluateCommandString: \'./lesson_03 --queries --no-inspect\'.
              opts
                at: \'time\'
                ifPresent: [ :arg | 
                  | ids |
                  ids := arg = \'all\'
                    ifTrue: [ 1 to: queries size ]
                    ifFalse: [ {(arg asNumber)} ].
                  result := {}.
                  ids
                    do: [ :id | 
                      | ms query |
                      query := queries at: id.
                      ms := Time millisecondsToRun: [ query queryResult ].
                      result add: ms ].
                  result edit: topez ]
                ifAbsent: [ 
                  opts
                    at: \'profile\'
                    ifPresent: [ :arg | 
                      | ids |
                      ids := arg = \'all\'
                        ifTrue: [ 1 to: queries size ]
                        ifFalse: [ {(arg asNumber)} ].
                      topez evaluateCommandString: \'pf start\'.
                      ids
                        do: [ :id | 
                          | query |
                          query := queries at: id.
                          query queryResult ].
                      topez evaluateCommandString: \'pf view\' ]
                    ifAbsent: [ 
                      opts
                        at: \'run\'
                        ifPresent: [ :arg | 
                          | id query |
                          id := arg asNumber.
                          query := queries at: id.
                          result := query queryResult.
                          result edit: topez ] ] ] ] ].
      result ]
    ifPresent: [ :ignored | 
      TDManPage
        viewManPage:
          \'NAME
  lesson_04 - Query timing and profiling
SYNOPSIS
  lesson_04 [-h|--help] [-e|--edit] 
            [--queries] 
            [--run=<query-index>] 
            [--time=<query-index>|all]
            [--profile=<query-index>|all]

DESCRIPTION
  LESSON 4
  --------
  Before we get started with timing and profiling the execution of the queries, we need to 
  create an even bigger population:

    `./lesson_02 --create=6`

  The --queries and --run options operate the same as in lesson 03:

    `./lesson_04 --queries`
    `./lesson_04 --run=10`

  The result sets should be larger now that we\'\'re using 6 generations.

  With the --time option you can get the execution time (CPU ms) for a singel query:

    `./lesson_04 --time=10`

  or all of the queries at once:

    `./lesson_04 --time=all`

  In both cases you will inspect an array.

  You can also run the profiler on a single query or all queries using the --profile option:

    `./lesson_04 --profile=10`
    `./lesson_04 --profile=all`

  LESSON 5
  --------
  `./lesson_05 -h`

  Table of Contents
  -----------------
  Using the Indexing Tutorial         - `./lesson_01 -h`
  Introducing the Family Tree         - `./lesson_02 -h`
  Family Tree Queries                 - `./lesson_03 -h`
  Query timing and profiling          - `./lesson_04 -h`
  Family Tree Indexes                 - `./lesson_05 -h`
  Indexed Query timing and profiling  - `./lesson_06 -h`

OPTIONS
  edit
    Bring up an editor on the source for this lesson.

  help
    Produce this man page.

  profile=<query-index>
    View profiling results for running the given query or queries.

  queries
    Open inspector on dictionary of available queries.

  run=<query-index>
    Run the query with the given index. The index is obtained by using the --queries option.
    
  time=<query-index>|all
    Run the query with the given index and return the number of ms of CPU taken to run the 
    query. The index is obtained by using the --queries option. If `all` is specified all
    of the queries will be run and an Array of timings will be returned.

EXAMPLES
  ./lesson_04 --help
  ./lesson_04 -e
  ./lesson_04 --queries
  ./lesson_04 --time=all
  ./lesson_04 --time=10
  ./lesson_04 --run=10
  ./lesson_04 --profile=all
  ./lesson_04 --profile=10
\'
        topez: topez ] ]',#creationTime:DateAndTime['2014-08-07T23:28:16.6984159946441-07:00'],#modificationTime:DateAndTime['2014-08-09T07:07:22.773952960968-07:00']}