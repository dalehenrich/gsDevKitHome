TDStringLeafNode{#name:'report',#contents:'44038  P2  Creating new index on existing path with new options silently fails
---------------------------------
This bug exists with the released 3.2. At least I\'d call this a bug.

This is a reproduction case. Note the index with optional path terms is not created, and no error or anything is returned, it just ignores the attempted redefinition. If you remove the index, then it creates the new one.


| coll spec1 spec2 res |
coll := IdentitySet new.
coll add: (Association newWithKey: \'aa\' value: 11).
coll add: (Association newWithKey: \'bb\' value: 22).
coll add: (Association newWithKey: \'cc\' value: 33).
coll add: (Association newWithKey: \'dd\' value: 44).
spec1 := GsIndexSpec new 
     equalityIndex: \'each.key\'
     lastElementClass: String.
spec2 := GsIndexSpec new
     equalityIndex: \'each.key\'
 \tlastElementClass: String
     options: (GsIndexOptions optionalPathTerms).
res := String new.

spec1 createIndexesOn: coll.
res add: coll indexSpec printString; lf; lf.

spec2 createIndexesOn: coll.
res add: coll indexSpec printString; lf; lf.

coll removeAllIndexes.
spec2 createIndexesOn: coll.
res add: coll indexSpec printString.

res
 ',#creationTime:DateAndTime['2014-09-16T14:21:52.1156001091003-07:00'],#modificationTime:DateAndTime['2014-09-16T14:22:36.3833029270172-07:00']}