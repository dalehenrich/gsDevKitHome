TDScriptLeafNode{#name:'bug',#contents:'[ :topez :objIn :tokens :command | 
  | opts args |
  \"for help: ./bug -h\"
  command
    getOptsMixedLongShort:
      {#(\'help\' $h #\'none\').
      #(\'boom\' nil #\'none\').
      #(\'clean\' nil #\'none\').
      #(\'create\' nil #\'none\')}
    optionsAndArguments: [ :options :operands | 
      opts := options.
      args := operands ].
  opts
    at: \'help\'
    ifAbsent: [ 
      | analysis theColl query |
      analysis := Dictionary new.
      opts
        at: \'clean\'
        ifPresent: [ :ignored | 
          \"clean up indexes here\"
          UserGlobals removeKey: #\'coll\' ifAbsent: [  ].
          IndexManager removeAllIndexes ].
      opts
        at: \'create\'
        ifPresent: [ :ignored | 
          | nsc |
          nsc := IdentityBag
            with: QuadByteString new
            with: DoubleByteString new
            with: (QuadByteSymbol withAll: String new).
          UserGlobals at: #\'coll\' put: nsc.
          true
            ifTrue: [ nsc createEqualityIndexOn: \'\' withLastElementClass: QuadByteString ] ].
      opts
        at: \'boom\'
        ifPresent: [ :ignored | 
          | nsc stream readStreamResult selectResult aKP doResult |
          nsc := UserGlobals at: #\'coll\' ifAbsent: [ Set new ].
          aKP := QuadByteString new.
          query := (GsQuery fromString: \'each = aKP\' on: nsc)
            bind: \'aKP\'
            to: aKP.
          readStreamResult := IdentityBag new.
          stream := query readStream.
          [ stream atEnd ] whileFalse: [ readStreamResult add: stream next ].
          doResult := IdentityBag new.
query do: [:each | doResult add: each].
          selectResult := nsc select: [ :each | each = aKP ].
          analysis
            at: \'query\' put: query;
            at: \'query result\' put: query queryResult;
            at: \'query readStream\' put: readStreamResult;
            at: \'query do\' put: doResult;
            at: \'select\' put: selectResult;
            yourself ].
      theColl := UserGlobals at: #\'coll\' ifAbsent: [ Set new ].
      analysis
        at: \'audit\' put: theColl auditIndexes;
        at: \'nsc\' put: theColl;
        yourself.
      analysis ]
    ifPresent: [ :ignored | 
      TDManPage
        viewManPage:
          \'NAME
  bug - bug sript utility template
SYNOPSIS
  bug [-h|--help]
  bug [--install][--clean][--create][--boom]
DESCRIPTION
  Reproduce bug.
EXAMPLES
  ./bug --help
  ./bug --clean --create --boom; edit
\'
        topez: topez ] ]',#creationTime:DateAndTime['2014-09-18T11:18:58.6124770641326-07:00'],#modificationTime:DateAndTime['2014-09-18T16:27:25.6304318904876-07:00']}